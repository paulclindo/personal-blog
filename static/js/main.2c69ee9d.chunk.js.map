{"version":3,"sources":["Assets/Img/loader.svg","config.js","Utils/apollo.js","Components/Header/style.js","Components/Header/HeaderContainer.js","Components/Header/HeaderWrapper.js","Components/Header/HeaderTitle.js","Components/Header/HeaderSubtitle.js","Components/Header/Header.js","Components/Header/GithubLogin.js","Components/Common/Loader.js","Components/Blog/BlogContainer.js","Components/Blog/Card/CardContainer.js","Components/Blog/Card/CardHeader.js","Components/Blog/Card/CardCategory.js","Components/Blog/Card/CardTitle.js","Components/Blog/Card/CardDescription.js","Components/Blog/Card/CardReadingTime.js","Components/Blog/Card/Card.js","Containers/Blog.js","Utils/emoji.js","Utils/tools.js","Utils/auth.js","Components/Post/PostContainer.js","Components/Post/PostTitle.js","Components/Post/PostDate.js","Components/Post/PostDateLink.js","Components/Post/PostReaction.js","Components/Post/BackButton.js","Components/Post/Author/AuthorDetails.js","Components/Post/Author/AuthorAvatar.js","Components/Post/Author/AuthorName.js","Containers/BlogPost.js","Router.js","Containers/GithubCallback.js","Application.js","serviceWorker.js","index.js"],"names":["module","exports","config","backgroundColor","titleColor","subtitleColor","client","ApolloClient","uri","request","operation","setContext","headers","authorization","atob","userClient","token","MainHeader","styled","div","WrapperBig","MainNav","nav","Title","h1","MainContent","Info","Header","href","className","enableOAuth","OAuthClientID","ButtonContainer","absolute","Button","button","Text","span","GithubLogin","isAbsolute","isLoggedIn","localStorage","getItem","onClick","a","async","window","location","icon","faGithub","LoaderContainer","Loader","src","loader","alt","BlogContainer","CardContainer","CardHeader","StyledCategory","CardCategory","value","key","id","style","color","name","CardTitle","h2","CardDescription","p","ReadingTime","CardReadingTime","time","Card","blog","useState","labels","setLabels","history","useHistory","useEffect","nodes","filter","map","i","readingTime","body","minutes","title","number","push","bodyText","GET_POSTS","gql","Blog","posts","setPosts","useQuery","loading","error","data","console","repository","issues","v","emojis","getNameByEmoji","emoji","obj","reversed","Object","keys","forEach","reverseMapping","getAuthenticatedUser","fetch","Headers","response","json","result","PostContainer","PostTitle","PostDate","PostDateLink","PostReaction","BackButton","AuthorDetails","AuthorAvatar","img","AuthorName","BlogHome","issueNumber","parseInt","split","pop","post","setPost","postNodeId","setPostNodeId","reactionPopup","setReactionPopup","postReactions","setPostReactions","reactionsContainer","useRef","userToken","setReactionFun","useCallback","reactions","reactions_array","element","emojiName","by","user","login","content","toggleReaction","r","length","reactionToAdd","mutate","mutation","node_id","current","forceUpdate","issue","go","back","author","avatarUrl","moment","updatedAt","format","url","target","options","overrides","component","children","props","rel","jsx","pre","language","docco","onSelect","ref","counters","onAdd","createBrowserHistory","require","Router","exact","path","BlogPost","OAuthSecret","GithubCallback","setLoading","code","method","URLSearchParams","client_id","client_secret","authenticate","search","get","then","setItem","access_token","setUsername","replace","origin","pathname","Application","Helmet","charSet","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","addEventListener","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2c69ee9d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.65f8709d.svg\";","export const config = {\n  // Your Github Converted Token To Know How To Get Your Token Look at Readme.md\n  githubConvertedToken:\n    \"Y2FlOTAzNWU3YTkxOTBjN2M4M2NkYmMxNTZlODVhMWFlYzhjNzEyMA==\",\n\n  //   Your Github UserName\n  githubUserName: \"paulclindo\",\n\n  //   Your Github Repo Name Where You Have your issues as Blog\n  githubRepo: \"personal-blog\",\n\n  // Your Personal Blog Title\n  title: \"news\",\n\n  // Your Personal Blog Subtitle\n  subtitle: \"Paul Ccari\",\n  // Set it to true if you have a Github app to add to this project\n  // and fill the client ID & secret\n  enableOAuth: true,\n  OAuthClientID: 'Iv1.17d83ae6de42e497',\n  OAuthSecret: 'f1835eb51020b001cbc16b56af20b5862e95b900',\n\n  // Header customization\n  header: {\n    backgroundColor: '#f1f6f8', // can be a CSS gradient\n    titleColor: '#ff5252',\n    subtitleColor: '#37474f',\n  },\n};\n","import ApolloClient from \"apollo-boost\";\n\nimport { config } from '../config'\n\nexport const client = new ApolloClient({\n  uri: \"https://api.github.com/graphql\",\n  request: operation => {\n    operation.setContext({\n      headers: {\n        authorization: `Bearer ${atob(config.githubConvertedToken)}`\n      }\n    });\n  }\n});\n\nexport const userClient = (token) => new ApolloClient({\n  uri: \"https://api.github.com/graphql\",\n  request: operation => {\n    operation.setContext({\n      headers: {\n        authorization: `Bearer ${token}`\n      }\n    });\n  }\n});","import styled from \"styled-components\";\n\nexport const MainHeader = styled.div`\n  background-repeat: no-repeat;\n  background-position: center center;\n  background-size: cover;\n  padding: 6em;\n  padding-top: 0;\n  background-color: #ffd701;\n\n  @media only screen and (max-width: 768px) {\n    padding: 2.5em;\n    padding-top: 0;\n  }\n`;\n\nexport const WrapperBig = styled.div`\n  margin: 0 auto;\n  padding: 0 2em;\n  max-width: 800px;\n  margin: auto;\n`;\nexport const MainNav = styled.nav`\n  color: #121212;\n\n  ul {\n    list-style: none;\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: flex-end;\n    padding: 0;\n    margin: 0;\n  }\n  li {\n    margin: 0;\n    flex: 1 1 33.33%;\n    padding: 1rem 0;\n    text-align: center;\n    &:first-child {\n      text-align: left;\n      flex: 4 1 33.33%;\n      justify-self: flex-end;\n      @media only screen and (max-width: 768px) {\n        display: none;\n      }\n    }\n    @media only screen and (max-width: 768px) {\n      font-size: 0.7em;\n      flex: 1 1 50%;\n    }\n  }\n  a {\n    text-decoration: none;\n    text-transform: uppercase;\n    font-size: 0.9rem;\n  }\n`;\n\nexport const Title = styled.h1`\n  flex: 3 1 100%;\n  font-weight: 700;\n  letter-spacing: 2;\n  line-height: 1.15;\n  margin: 1.25rem 0;\n  font-size: 8.5em;\n  color: #121212;\n  text-transform: lowercase;\n  font-weight: 800;\n\n  @media only screen and (max-width: 768px) {\n    font-size: 3em;\n  }\n`;\nexport const MainContent = styled.div`\n  display: flex;\n  align-items: center;\n  @media only screen and (max-width: 768px) {\n    /* font-size: 3em; */\n  }\n`;\nexport const Info = styled.div`\n  margin-top: 4rem;\n  flex: 1 1 40%;\n  p {\n    font-size: 0.9rem;\n  }\n  @media only screen and (max-width: 768px) {\n    /* font-size: 3em; */\n  }\n`;\n","import styled from 'styled-components'\n\nimport { config } from '../../config'\nconst { backgroundColor } = config.header\n\nexport const HeaderContainer = styled.div`\n  position: relative;\n  padding: 5em;\n  text-align: center;\n  background: ${backgroundColor};\n  background-repeat: no-repeat;\n  background-position: center center;\n  background-size: cover;\n\n  @media only screen and (max-width: 768px) {\n    padding: 3em;\n  }\n`","import styled from 'styled-components'\n\nexport const HeaderWrapper = styled.div`\n  margin: 0 auto;\n  padding: 0 1em;\n  max-width: 1140px;\n  text-align: center;\n`","import styled from 'styled-components'\n\nimport { config } from '../../config'\nconst { titleColor } = config.header\n\nexport const HeaderTitle = styled.h1`\n  font-weight: 700;\n  line-height: 1.15;\n  margin: 1.25rem 0;\n  font-size: 4.5em;\n  text-align: center;\n  color: ${titleColor};\n\n  @media only screen and (max-width: 768px) {\n    font-size: 3em;\n  }\n`","import styled from 'styled-components'\n\nimport { config } from '../../config'\nconst { subtitleColor } = config.header\n\nexport const HeaderSubtitle = styled.h1`\n  font-weight: 400;\n  color: ${subtitleColor};\n  line-height: 1.15;\n  margin: 1.25rem 0;\n  font-size: 2.5em;\n  text-align: center;\n\n  @media only screen and (max-width: 768px) {\n    font-size: 2em;\n  }\n`","import React from 'react'\n\nimport {\n    HeaderContainer,\n    HeaderWrapper,\n    HeaderTitle,\n    HeaderSubtitle,\n    GithubLogin\n} from './'\nimport {\n    MainHeader,\n    MainContent,\n    WrapperBig,\n    Title,\n    MainNav,\n    Info\n} from \"./style.js\";\nimport { config } from \"../../config\"\n\nexport const Header = () => {\n    return (\n        <MainHeader>\n            <WrapperBig>\n                <MainNav>\n                    <ul>\n                        <li>\n                            <a href=\"http://paulccari.com/\">{config.subtitle}</a>\n                        </li>\n                        <li>\n                            <a href=\"http://paulccari.com/portfolio.html\">Portfolio</a>\n                        </li>\n                        <li>\n                            <a href=\"https://www.paulccari.com/contact.html\">Contact me</a>\n                        </li>\n                    </ul>\n                </MainNav>\n                <MainContent>\n                    <Title className=\"header-title\">{config.title}</Title>\n                    <Info>\n                        <h4>Inspiration</h4>\n                        <p>Providing the latest tips for developers and designers.</p>\n                    </Info>\n                </MainContent>\n            </WrapperBig>\n        </MainHeader>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\nimport { config } from '../../config'\n\nconst { enableOAuth, OAuthClientID } = config\n\nconst ButtonContainer = styled.div`\n  display: ${enableOAuth ? 'block' : 'none'};\n  position: ${({ absolute }) => absolute ? 'absolute' : 'initial'};\n  top: 10px;\n  right: 10px;\n`\nconst Button = styled.button`\n  -webkit-appearance: none;\n  background: linear-gradient(180deg, rgb(136, 220, 109) 0%, rgb(92, 168, 65) 100%);\n  color: #FFF;\n  border: none;\n  padding: 8px 16px;\n  font-size: 16px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: 0.2s;\n  outline: 0;\n\n  :hover {\n    box-shadow: 0px 0px 10px 1px rgba(0,0,0,0.10);\n  }\n`\n\nconst Text = styled.span`\n  color: #FFF;\n  font-size: 18px;\n`\n\nexport const GithubLogin = ({ isAbsolute }) => {\n  const isLoggedIn = localStorage.getItem('githubToken') || false\n\n  const callOAuth = async () => {\n    window.location.href = 'https://github.com/login/oauth/authorize?client_id=' + OAuthClientID;\n  }\n\n  return (\n    <ButtonContainer absolute={isAbsolute}>\n      {!isLoggedIn\n       ? (\n          <Button onClick={callOAuth}>\n            <FontAwesomeIcon icon={faGithub} /> Log in\n          </Button>\n         )\n       : <Text>Logged in as {localStorage.getItem('githubUsername')}</Text>\n      }\n    </ButtonContainer>\n  )\n}","import React from 'react'\nimport styled from 'styled-components'\n\nimport loader from '../../Assets/Img/loader.svg'\n\nconst LoaderContainer = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  img {\n    height: 128px;\n  }\n`\n\nexport const Loader = () => (\n  <LoaderContainer>\n    <img src={loader} alt=\"Loading...\" />\n  </LoaderContainer>\n)","import styled from 'styled-components'\n\nexport const BlogContainer = styled.div`\n  margin: 2rem auto 0;\n  width: 90%;\n  max-width: 700px;\n  padding: 20px 10px;\n`","import styled from 'styled-components'\n\nexport const CardContainer = styled.div`\n  cursor: pointer;\n  margin-bottom: 6rem;\n  border-radius: 10px;\n  padding: 10px;\n  transition: 0.2s;\n  position: relative;\n\n  :hover {\n    background-color: #F5F5F5;\n  }\n`","import styled from 'styled-components'\n\nexport const CardHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledCategory = styled.div`\n  display: inline-block;\n  background: #009bbb;\n  border-radius: 3px;\n  padding: 3px 15px;\n  font-size: 12px;\n  text-transform: uppercase;\n  color: #fff;\n  font-weight: 300;\n  line-height: 28px;\n  font-family: \"Quicksand\";\n  margin-right: 10px;\n`\n\nexport const CardCategory = ({ value }) => (\n  <StyledCategory\n    key={value.id}\n    style={{ backgroundColor: `#${value.color}` }}>\n    {value.name}\n  </StyledCategory>\n)","import styled from 'styled-components'\n\nexport const CardTitle = styled.h2`\n  font-size: 34px;\n`","import styled from 'styled-components'\n\nexport const CardDescription = styled.p`\n  font-size: 18px;\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n`","import React from 'react'\nimport styled from 'styled-components'\n\nconst ReadingTime = styled.p`\n  color: #b5b5b5;\n  font-size: 15px;\n  position: absolute;\n  top: -10px;\n  right: 10px;\n`\n\nexport const CardReadingTime = ({ time }) => (\n  <ReadingTime>{time} Min Read</ReadingTime>\n)","import React, { useState, useEffect } from \"react\";\nimport readingTime from \"reading-time\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  CardContainer,\n  CardHeader,\n  CardCategory,\n  CardReadingTime,\n  CardTitle,\n  CardDescription,\n} from './'\n\nexport const Card = ({ blog }) => {\n  const [labels, setLabels] = useState([]);\n  const history = useHistory();\n\n  const openBlog = (title, number) => {\n    history.push(`/blog/${title}/${number}`);\n  }\n\n  useEffect(() => {\n    const labels = blog.labels.nodes.filter((value) => {\n      return value.name !== \"blog\";\n    });\n\n    setLabels(labels);\n  }, [blog.labels.nodes]);\n\n  return (\n    <CardContainer>\n      <CardHeader>\n        <>\n        {labels.map((value, i) => {\n          return (\n            <CardCategory value={value} key={i} />\n          );\n        })}\n        </>\n        <CardReadingTime time={readingTime(blog.body).minutes} />\n      </CardHeader>\n      <div onClick={() => openBlog(blog.title, blog.number)}>\n        <CardTitle>{blog.title}</CardTitle>\n        <CardDescription>\n          {blog.bodyText}\n        </CardDescription>\n      </div>\n    </CardContainer>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from '@apollo/react-hooks';\n\nimport { config } from \"../config\";\nimport { Header } from \"../Components/Header\";\nimport { Loader } from '../Components/Common'\nimport { BlogContainer } from '../Components/Blog'\nimport { Card } from '../Components/Blog/Card'\n\nconst GET_POSTS = gql`\n{\n  repository(owner: \"${config.githubUserName}\", name: \"${config.githubRepo}\") {\n    issues(first: 100, states: OPEN, filterBy: { labels: \"blog\" }) {\n      nodes {\n        title\n        body\n        bodyHTML\n        bodyText\n        number\n        labels(first: 100) {\n          nodes {\n            color\n            name\n            id\n          }\n        }\n        author {\n          url\n          avatarUrl\n          login\n        }\n        updatedAt\n        id\n      }\n    }\n  }\n}\n`\n\nconst Blog = () => {\n  const [posts, setPosts] = useState([]);\n  const { loading, error, data } = useQuery(GET_POSTS);\n\n  useEffect(() => {\n    if (!loading) {\n      if (error) {\n        console.error(error)\n      }\n\n      if (data) {\n        setPosts(data?.repository?.issues?.nodes)\n      }\n    }\n  }, [loading, error, data]);\n\n  return (\n    <>\n      <Header />\n      <BlogContainer>\n        {\n          loading\n          ? <Loader />\n          : posts.map((v, i) => {\n              return <Card blog={v} key={i} />;\n            })\n        }\n      </BlogContainer>\n    </>\n  );\n}\n\nexport default Blog;\n","import { reverseMapping } from './tools'\n\nconst emojis = {\n  'THUMBS_UP': '👍',\n  'THUMBS_DOWN': '👎',\n  'LAUGH': '😄',\n  'HOORAY': '🎉',\n  'CONFUSED': '😕',\n  'HEART': '❤️',\n  'ROCKET': '🚀',\n  'EYES': '👀',\n}\n\nexport const getEmojiByName = (emojiName) => {\n  return emojis[emojiName] || '';\n};\n\nexport const getNameByEmoji = (emoji) => {\n  return reverseMapping(emojis)[emoji] || '';\n};","export const reverseMapping = (obj) => {\n  const reversed = {};\n  Object.keys(obj).forEach((key) => {\n      reversed[obj[key]] = key\n  });\n  return reversed;\n};","export const getToken = () => {\n  return localStorage.getItem('githubToken');\n}\n\nexport const getAuthenticatedUser = async () => {\n  const token = localStorage.getItem('githubToken');\n  if (token) {\n    const response = await fetch('https://api.github.com/user', {\n      headers: new Headers({\n        authorization: `Bearer ${token}`\n      }),\n    });\n    const result = await response.json();\n    result.token = token;\n    return result;\n  }\n}","import styled from 'styled-components'\n\nexport const PostContainer = styled.div`\n  margin: 2rem auto 0;\n  width: 90%;\n  max-width: 700px;\n  padding: 20px 10px;\n  position: relative;\n`","import styled from 'styled-components'\n\nexport const PostTitle = styled.h1`\n  @media only screen and (max-width: 768px) {\n    font-size: 30px;\n  }\n`","import styled from 'styled-components'\n\nexport const PostDate = styled.p`\n  color: rgba(0, 0, 0, 0.54);\n  font-weight: 400;\n  font-size: 14px;\n  margin-bottom: 0px;\n  margin-top: 0px;\n`","import styled from 'styled-components'\n\nexport const PostDateLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  transition-duration: 0.15s, 0.15s, 0.15s;\n  transition-timing-function: ease-in, ease-in, ease-in;\n  transition-delay: 0s, 0s, 0s;\n  color: rgba(0, 0, 0, 0.54);\n\n  :hover {\n    color: rgba(0, 0, 0, 0.84);\n  }\n`","import styled from 'styled-components'\n\nexport const PostReaction = styled.span`\n  position: absolute;\n  bottom: 60px;\n  animation-name: scale-in;\n  animation-duration: 0.15s;\n  animation-timing-function: cubic-bezier(0.2, 0, 0.13, 1.5);\n`","import styled from \"styled-components\";\n\nexport const BackButton = styled.button`\n  outline: none;\n  border: 1px solid;\n  font-size: 22px;\n  font-family: \"Shadows Into Light\", serif;\n  border-radius: 5px;\n  padding: 0px 20px 0 30px;\n  cursor: pointer;\n  position: relative;\n\n  :hover {\n    background-color: black;\n    color: white;\n  }\n\n  :before {\n    content: \"\\\\27A4\";\n    position: absolute;\n    transform: translateY(-50%) rotate(180deg);\n    left: 10px;\n    font-size: 16px;\n    top: 54%;\n  }\n`;\n","import styled from 'styled-components'\n\nexport const AuthorDetails = styled.div`\n  display: flex;\n  align-items: center;\n`","import styled from 'styled-components'\n\nexport const AuthorAvatar = styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: 40px;\n  margin: 10px;\n  margin-left: 0px;\n`","import styled from 'styled-components'\n\nexport const AuthorName = styled.p`\n  margin-bottom: 0px;\n  margin-top: 0px;\n  font-size: 16px;\n  color: rgba(0, 0, 0, 0.84);\n`","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport moment from \"moment\";\nimport Markdown from \"markdown-to-jsx\";\nimport readingTime from \"reading-time\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { GithubSelector, GithubCounter } from \"react-reactions\";\nimport { userClient } from '../Utils/apollo'\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport { config } from \"../config\";\nimport { getEmojiByName, getNameByEmoji } from '../Utils/emoji';\nimport { getAuthenticatedUser } from '../Utils/auth'\nimport { Loader } from \"../Components/Common\";\nimport { PostContainer, PostTitle, PostDate, PostDateLink, PostReaction, BackButton } from \"../Components/Post\";\nimport { AuthorDetails, AuthorAvatar, AuthorName } from \"../Components/Post/Author\";\nimport { GithubLogin } from '../Components/Header'\n\nexport default function BlogHome() {\n  const issueNumber = parseInt(window.location.href.split(\"/\").pop());\n  const GET_POSTS = gql`{\n    repository(owner: \"${config.githubUserName}\", name: \"${config.githubRepo}\") {\n      issue(number: ${issueNumber}) {\n        title\n        body\n        bodyHTML\n        url\n        bodyText\n        number\n        bodyHTML\n        author {\n          url\n          avatarUrl\n          login\n        }\n        reactions(first:100){\n          nodes{\n            content\n            user{\n              id\n              login\n            }\n          }\n        }\n        updatedAt\n        id\n      }\n    }\n  }\n  `;\n  const [post, setPost] = useState([]);\n  const [postNodeId, setPostNodeId] = useState('');\n  const [reactionPopup, setReactionPopup] = useState(false);\n  const [postReactions, setPostReactions] = useState([]);\n  const { loading, error, data } = useQuery(GET_POSTS);\n  const reactionsContainer = useRef(null);\n  const userToken = localStorage.getItem('githubToken');\n\n  const setReactionFun = useCallback((reactions) => {\n    // {\n    //   emoji: \"👍\", // String emoji reaction\n    //   by: \"case\" // String of persons name\n    // }\n\n    let reactions_array = [];\n    reactions.forEach(element => {\n      let obj = {\n        by: element.user.login,\n        emoji: getEmojiByName(element.content)\n      };\n      reactions_array.push(obj);\n    });\n\n    setPostReactions(reactions_array);\n  }, []);\n\n  const HyperLink = ({ children, ...props }) => (\n    <a href={props.href} target=\"_blank\" rel=\"noopener noreferrer\" className=\"blog-post-anchor\">\n      {children}\n      <style jsx=\"true\">\n        {`\n          a {\n            color: #484848;\n            font-weight: 400;\n          }\n        `}\n      </style>\n    </a>\n  );\n\n  const CodeBlock = ({ children }) => (\n    <SyntaxHighlighter language=\"javascript\" style={docco}>\n      {children.props.children}\n    </SyntaxHighlighter>\n  );\n\n  const toggleReaction = async (emoji) => {\n    let reactions = postReactions;\n    const user = await getAuthenticatedUser();\n    const existingReaction = reactions.filter(r => (r.emoji === emoji && r.by === user.login))\n\n    if (existingReaction.length === 0) {\n      const reactionToAdd = {\n        by: user.login,\n        emoji: emoji,\n      }\n\n      // Add the reaction\n      await userClient(userToken).mutate({\n        mutation: gql`\n          mutation AddReaction {\n            addReaction(input:{subjectId:\"${postNodeId}\",content:${getNameByEmoji(emoji)},clientMutationId:\"${user.node_id}\"}) {\n              reaction {\n                id\n              }\n            }\n          }\n        `\n      });\n\n      reactions.push(reactionToAdd);\n    } else {\n      // Remove the reaction\n      await userClient(userToken).mutate({\n        mutation: gql`\n          mutation RemoveReaction {\n            removeReaction(input:{subjectId:\"${postNodeId}\",content:${getNameByEmoji(emoji)},clientMutationId:\"${user.node_id}\"}) {\n              reaction {\n                id\n              }\n            }\n          }\n        `\n      });\n\n      // Remove the reaction from the state\n      reactions = reactions.filter(r => !(r.by === user.login && r.emoji === emoji))\n    }\n\n    setPostReactions(reactions);\n    reactionsContainer.current.forceUpdate(); // refresh the counter\n    setReactionPopup(false); // hiding the reactions choice\n  }\n\n  useEffect(() => {\n    if (!loading) {\n      if (data) {\n        const issues = data.repository.issue;\n        setPostNodeId(issues.id);\n        setPost(issues);\n        setReactionFun(issues.reactions.nodes);\n      }\n    }\n  }, [loading, error, data, setReactionFun]);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  const onBackClick = () => {\n    // ifthe previous page does not exist in the history list. this method to load the previous (or next) URL in the history list.\n    window.history.go();\n    // The back() method loads the previous URL in the history list.\n    window.history.back();\n  };\n\n  return (\n    <>\n      {post.title && (\n        <PostContainer>\n          <BackButton onClick={() => onBackClick()}>Back</BackButton>\n\n          <PostTitle>{post.title}</PostTitle>\n          <div>\n            <AuthorDetails>\n              <AuthorAvatar src={post.author.avatarUrl} alt={post.author.login} />\n              <div>\n                <AuthorName>{post.author.login}</AuthorName>\n                <PostDate>\n                  {moment(post.updatedAt).format(\"DD MMM YYYY\")} .{readingTime(post.body).minutes} Min Read .\n                  <PostDateLink href={post.url} target=\"_black\">\n                    View On Github\n                  </PostDateLink>\n                </PostDate>\n              </div>\n            </AuthorDetails>\n          </div>\n          <Markdown\n            options={{\n              overrides: {\n                a: {\n                  component: HyperLink\n                },\n                pre: {\n                  component: CodeBlock\n                }\n              }\n            }}\n          >\n            {post.body}\n          </Markdown>\n          {reactionPopup && (\n            <PostReaction>\n              {userToken\n                ? <GithubSelector onSelect={emoji => toggleReaction(emoji)} />\n                : <GithubLogin isAbsolute={false} />\n              }\n            </PostReaction>\n          )}\n          <GithubCounter\n            ref={reactionsContainer}\n            counters={postReactions}\n            onSelect={emoji => toggleReaction(emoji)}\n            onAdd={() => setReactionPopup(!reactionPopup)}\n          />\n        </PostContainer>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\n\nimport Blog from \"./Containers/Blog\"\nimport BlogPost from \"./Containers/BlogPost\";\n\nvar createBrowserHistory = require(\"history\").createBrowserHistory;\nconst history = createBrowserHistory();\n\nconst Router = () => {\n  return (\n    <HashRouter history={history}>\n      <Switch>\n        <Route exact path=\"/\" component={Blog} />\n        <Route exact path=\"/blog/:title/:issueNumber\" component={BlogPost}/>\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default Router;\n","import React, { useEffect, useState } from 'react'\n\nimport { config } from '../config'\nimport { getAuthenticatedUser } from '../Utils/auth'\nimport { Loader } from '../Components/Common/Loader'\n\nconst { enableOAuth, OAuthClientID, OAuthSecret } = config\n\nconst GithubCallback = () => {\n  const [loading, setLoading] = useState(true)\n\n  const authenticate = async (code) => {\n    // Apparently we need to use a proxy to make this request (CORS blocked for client-side only applications)\n    const response = await fetch('https://cors-anywhere.herokuapp.com/https://github.com/login/oauth/access_token', {\n      method: 'POST',\n      body: new URLSearchParams({\n        client_id: OAuthClientID,\n        client_secret: OAuthSecret,\n        code: code,\n      }),\n      headers: new Headers({\n        'Accept': 'application/json',\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }),\n    })\n\n    return response.json()\n  }\n\n  const setUsername = async () => {\n    const { login } = await getAuthenticatedUser()\n    localStorage.setItem('githubUsername', login)\n  }\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    authenticate(urlParams.get('code'))\n    .then((response) => {\n      if (response) {\n        localStorage.setItem('githubToken', response.access_token)\n        setUsername().then(() => setLoading(false))\n      }\n    })\n  }, [])\n\n  if (!enableOAuth || !loading) {\n    return window.location.replace(window.location.origin + window.location.pathname);\n  }\n\n  return <Loader />\n}\n\nexport default GithubCallback\n","import React from 'react'\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { Helmet } from \"react-helmet\";\n\nimport { config } from './config'\nimport { client } from './Utils/apollo';\nimport Router from './Router';\nimport GithubCallback from './Containers/GithubCallback';\n\nconst Application = () => {\n  const urlParams = new URLSearchParams(window.location.search);\n\n  if (urlParams.get('code')) {\n    return <GithubCallback />\n  }\n\n  return (\n    <>\n      <Helmet>\n          <title>{config.title}</title>\n          <meta charSet=\"utf-8\" />\n          <meta name=\"description\" content={config.subtitle} />\n          <meta name=\"theme-color\" content={config.header.backgroundColor} />\n      </Helmet>\n      <ApolloProvider client={client}>\n        <Router />\n      </ApolloProvider>\n    </>\n  )\n};\n\nexport default Application;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Application from './Application';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<Application />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nif(process.env.NODE_ENV === 'production') serviceWorker.register();\nelse serviceWorker.unregister();\n\n"],"sourceRoot":""}